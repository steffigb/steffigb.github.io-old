{"version":3,"sources":["webpack:///./src/components/Contact/Contact.js","webpack:///./src/pages/contact.js"],"names":["Contact","props","state","name","email","emailReal","message","handleChange","bind","handleSubmit","encode","data","Object","keys","map","key","encodeURIComponent","join","e","preventDefault","this","b","document","getElementById","disabled","value","style","transition","backgroundColor","theme","color","brand","primaryLight","borderColor","fetch","contactPostAddress","method","headers","body","then","rawResponse","json","response","console","log","result","navigate","error","alert","catch","setState","target","render","query","queryResults","site","siteMetadata","primary","primaryDark","action","onSubmit","data-netlify","type","onChange","display","required","id","React","Component","ContactPage","Fragment","Article","Headline","title","Seo","pageTitle"],"mappings":"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","file":"component---src-pages-contact-js-377dd72288708162963a.js","sourcesContent":["/* eslint no-unused-vars: 0 */\n\nimport { navigate } from \"gatsby\";\nimport React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nimport theme from \"../../theme/theme.yaml\";\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\", // honeypot\n      emailReal: \"\",\n      message: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  encode(data) {\n    return Object.keys(data)\n      .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n      .join(\"&\");\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.email != \"\") return; // honeypot\n\n    const b = document.getElementById(\"submitButton\");\n    b.disabled = true;\n    b.value = \"Sending...\";\n    b.style.transition = \"200ms ease-in-out\";\n    b.style.backgroundColor = theme.color.brand.primaryLight;\n    b.style.borderColor = theme.color.brand.primaryLight;\n    b.style.color = \"#666\";\n\n    fetch(this.contactPostAddress, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: this.encode({ \"form-name\": \"contact\", ...this.state })\n    })\n      .then(function(rawResponse) {\n        return rawResponse.json();\n      })\n      .then(function(response) {\n        console.log(response);\n        if (response.result == \"success\") {\n          console.log(\"Form submission success\");\n          navigate(\"/success\");\n        } else {\n          console.error(response);\n          alert(\"Server responded with error! Sorry about this.\");\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        alert(\"Unable to deliver. Is your internet connection down?\");\n      });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <StaticQuery\n        query={graphql`\n          query ContactQuery {\n            site {\n              siteMetadata {\n                contactPostAddress\n              }\n            }\n          }\n        `}\n        render={queryResults => {\n          // It's very ugly to update this.contactPostAddress inside render(), but Gatsby currently\n          // offers only two ways of using StaticQuery: this way (inside render), and as a React Hook\n          // (which would be incompatible with a class component).\n          const contactPostAddress = queryResults.site.siteMetadata.contactPostAddress;\n          this.contactPostAddress = contactPostAddress;\n\n          return (\n            <>\n              <div className=\"form\">\n                <form\n                  name=\"contact\"\n                  method=\"post\"\n                  action={contactPostAddress}\n                  onSubmit={this.handleSubmit}\n                  data-netlify=\"true\"\n                >\n                  <label className=\"formItem\">\n                    Name (optional):\n                    <br />\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      value={this.state.name}\n                      onChange={this.handleChange}\n                    />\n                  </label>\n                  <br />\n                  <br />\n                  <label className=\"formItem\">\n                    E-mail (optional):\n                    <br />\n                    <input\n                      type=\"email\"\n                      name=\"emailReal\"\n                      value={this.state.emailReal}\n                      onChange={this.handleChange}\n                    />\n                  </label>\n                  <br />\n                  <br />\n                  <input\n                    type=\"email\"\n                    name=\"email\" // actually honeypot\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                    style={{ display: \"none\" }}\n                  />\n                  <label className=\"formItem\">\n                    Message:\n                    <br />\n                    <textarea\n                      name=\"message\"\n                      required={true}\n                      value={this.state.message}\n                      onChange={this.handleChange}\n                    />\n                  </label>\n                  <br />\n                  <br />\n                  <input type=\"submit\" value=\"Submit\" id=\"submitButton\" className=\"formItem\" />\n                  {contactPostAddress === \"\" && <h1>Undefined contactPostAddress!</h1>}\n                </form>\n\n                {/* --- STYLES --- */}\n                <style jsx>{`\n                  .formItem input,\n                  textarea {\n                    width: 100%;\n                    border-radius: 5px;\n                    border-width: 2px;\n                    font-family: Open Sans;\n                    font-weight: 400;\n                    font-size: 1em;\n                  }\n                  .formItem input {\n                    height: 30px;\n                    max-width: 300px;\n                  }\n                  .formItem textarea {\n                    height: 100px;\n                    max-width: 600px;\n                  }\n                  #submitButton {\n                    color: white;\n                    height: auto;\n                    font-family: Open Sans;\n                    font-size: 1.2em;\n                    font-weight: 400;\n                    padding: 0.5em 3em;\n                    border-radius: 5px;\n                    background: ${theme.color.brand.primary};\n                    border: 1px solid ${theme.color.brand.primary};\n                  }\n                  #submitButton:hover {\n                    background: ${theme.color.brand.primaryDark};\n                    cursor: pointer;\n                  }\n                `}</style>\n              </div>\n            </>\n          );\n        }}\n      />\n    );\n  }\n}\n\nexport default Contact;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport theme from \"../theme/theme.yaml\";\nimport Article from \"../components/Article\";\nimport Contact from \"../components/Contact\";\nimport Headline from \"../components/Article/Headline\";\nimport Seo from \"../components/Seo\";\n\nconst ContactPage = props => {\n\n  return (\n    <React.Fragment>\n        <Article theme={theme}>\n          <header>\n            <Headline title=\"Contact\" theme={theme} />\n          </header>\n          <Contact theme={theme} />\n        </Article>\n      <Seo pageTitle=\"Contact\"/>\n    </React.Fragment>\n  );\n};\n\nContactPage.propTypes = {\n};\n\nexport default ContactPage;\n"],"sourceRoot":""}